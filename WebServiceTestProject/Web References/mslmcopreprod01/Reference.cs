//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebServiceTestProject.mslmcopreprod01 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CometServiceSoap", Namespace="http://maxxia.com.au/CometInterface")]
    public partial class CometService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SubmitFleetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetupFullPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBenefitOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePaymentInstructionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployerOfferingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployerPayCyclesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployerCostCentresOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncLookupDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateEmployerOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployerCodeByWorkEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SectorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormsEmailToSelfOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePayeeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CometService() {
            this.Url = global::WebServiceTestProject.Properties.Settings.Default.WebServiceTestProject_mslmcopreprod01_CometService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SubmitFleetAccountCompletedEventHandler SubmitFleetAccountCompleted;
        
        /// <remarks/>
        public event SetupFullPackageCompletedEventHandler SetupFullPackageCompleted;
        
        /// <remarks/>
        public event CreateEmployeeCompletedEventHandler CreateEmployeeCompleted;
        
        /// <remarks/>
        public event CreatePackageCompletedEventHandler CreatePackageCompleted;
        
        /// <remarks/>
        public event CreateVehicleCompletedEventHandler CreateVehicleCompleted;
        
        /// <remarks/>
        public event CreateBenefitCompletedEventHandler CreateBenefitCompleted;
        
        /// <remarks/>
        public event CreatePaymentInstructionCompletedEventHandler CreatePaymentInstructionCompleted;
        
        /// <remarks/>
        public event GetEmployerOfferingsCompletedEventHandler GetEmployerOfferingsCompleted;
        
        /// <remarks/>
        public event GetEmployerPayCyclesCompletedEventHandler GetEmployerPayCyclesCompleted;
        
        /// <remarks/>
        public event GetEmployerCostCentresCompletedEventHandler GetEmployerCostCentresCompleted;
        
        /// <remarks/>
        public event SyncLookupDataCompletedEventHandler SyncLookupDataCompleted;
        
        /// <remarks/>
        public event ValidateEmployerCompletedEventHandler ValidateEmployerCompleted;
        
        /// <remarks/>
        public event EmployerCodeByWorkEmailCompletedEventHandler EmployerCodeByWorkEmailCompleted;
        
        /// <remarks/>
        public event SectorDetailsCompletedEventHandler SectorDetailsCompleted;
        
        /// <remarks/>
        public event FormsEmailToSelfCompletedEventHandler FormsEmailToSelfCompleted;
        
        /// <remarks/>
        public event CreatePayeeCompletedEventHandler CreatePayeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/SubmitFleetAccount", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SubmitFleetAccount(string requestXml) {
            object[] results = this.Invoke("SubmitFleetAccount", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitFleetAccountAsync(string requestXml) {
            this.SubmitFleetAccountAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void SubmitFleetAccountAsync(string requestXml, object userState) {
            if ((this.SubmitFleetAccountOperationCompleted == null)) {
                this.SubmitFleetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitFleetAccountOperationCompleted);
            }
            this.InvokeAsync("SubmitFleetAccount", new object[] {
                        requestXml}, this.SubmitFleetAccountOperationCompleted, userState);
        }
        
        private void OnSubmitFleetAccountOperationCompleted(object arg) {
            if ((this.SubmitFleetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitFleetAccountCompleted(this, new SubmitFleetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/SetupFullPackage", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SetupFullPackage(string requestXml) {
            object[] results = this.Invoke("SetupFullPackage", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SetupFullPackageAsync(string requestXml) {
            this.SetupFullPackageAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void SetupFullPackageAsync(string requestXml, object userState) {
            if ((this.SetupFullPackageOperationCompleted == null)) {
                this.SetupFullPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetupFullPackageOperationCompleted);
            }
            this.InvokeAsync("SetupFullPackage", new object[] {
                        requestXml}, this.SetupFullPackageOperationCompleted, userState);
        }
        
        private void OnSetupFullPackageOperationCompleted(object arg) {
            if ((this.SetupFullPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetupFullPackageCompleted(this, new SetupFullPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/CreateEmployee", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateEmployee(string requestXml) {
            object[] results = this.Invoke("CreateEmployee", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEmployeeAsync(string requestXml) {
            this.CreateEmployeeAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void CreateEmployeeAsync(string requestXml, object userState) {
            if ((this.CreateEmployeeOperationCompleted == null)) {
                this.CreateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeOperationCompleted);
            }
            this.InvokeAsync("CreateEmployee", new object[] {
                        requestXml}, this.CreateEmployeeOperationCompleted, userState);
        }
        
        private void OnCreateEmployeeOperationCompleted(object arg) {
            if ((this.CreateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEmployeeCompleted(this, new CreateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/CreatePackage", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreatePackage(string requestXml) {
            object[] results = this.Invoke("CreatePackage", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePackageAsync(string requestXml) {
            this.CreatePackageAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void CreatePackageAsync(string requestXml, object userState) {
            if ((this.CreatePackageOperationCompleted == null)) {
                this.CreatePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePackageOperationCompleted);
            }
            this.InvokeAsync("CreatePackage", new object[] {
                        requestXml}, this.CreatePackageOperationCompleted, userState);
        }
        
        private void OnCreatePackageOperationCompleted(object arg) {
            if ((this.CreatePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePackageCompleted(this, new CreatePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/CreateVehicle", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateVehicle(string requestXml) {
            object[] results = this.Invoke("CreateVehicle", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVehicleAsync(string requestXml) {
            this.CreateVehicleAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void CreateVehicleAsync(string requestXml, object userState) {
            if ((this.CreateVehicleOperationCompleted == null)) {
                this.CreateVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVehicleOperationCompleted);
            }
            this.InvokeAsync("CreateVehicle", new object[] {
                        requestXml}, this.CreateVehicleOperationCompleted, userState);
        }
        
        private void OnCreateVehicleOperationCompleted(object arg) {
            if ((this.CreateVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVehicleCompleted(this, new CreateVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/CreateBenefit", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreateBenefit(string requestXml) {
            object[] results = this.Invoke("CreateBenefit", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBenefitAsync(string requestXml) {
            this.CreateBenefitAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void CreateBenefitAsync(string requestXml, object userState) {
            if ((this.CreateBenefitOperationCompleted == null)) {
                this.CreateBenefitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBenefitOperationCompleted);
            }
            this.InvokeAsync("CreateBenefit", new object[] {
                        requestXml}, this.CreateBenefitOperationCompleted, userState);
        }
        
        private void OnCreateBenefitOperationCompleted(object arg) {
            if ((this.CreateBenefitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBenefitCompleted(this, new CreateBenefitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/CreatePaymentInstruction", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreatePaymentInstruction(string requestXml) {
            object[] results = this.Invoke("CreatePaymentInstruction", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePaymentInstructionAsync(string requestXml) {
            this.CreatePaymentInstructionAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void CreatePaymentInstructionAsync(string requestXml, object userState) {
            if ((this.CreatePaymentInstructionOperationCompleted == null)) {
                this.CreatePaymentInstructionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePaymentInstructionOperationCompleted);
            }
            this.InvokeAsync("CreatePaymentInstruction", new object[] {
                        requestXml}, this.CreatePaymentInstructionOperationCompleted, userState);
        }
        
        private void OnCreatePaymentInstructionOperationCompleted(object arg) {
            if ((this.CreatePaymentInstructionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePaymentInstructionCompleted(this, new CreatePaymentInstructionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/GetEmployerOfferings", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetEmployerOfferings(string requestXml) {
            object[] results = this.Invoke("GetEmployerOfferings", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployerOfferingsAsync(string requestXml) {
            this.GetEmployerOfferingsAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void GetEmployerOfferingsAsync(string requestXml, object userState) {
            if ((this.GetEmployerOfferingsOperationCompleted == null)) {
                this.GetEmployerOfferingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployerOfferingsOperationCompleted);
            }
            this.InvokeAsync("GetEmployerOfferings", new object[] {
                        requestXml}, this.GetEmployerOfferingsOperationCompleted, userState);
        }
        
        private void OnGetEmployerOfferingsOperationCompleted(object arg) {
            if ((this.GetEmployerOfferingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployerOfferingsCompleted(this, new GetEmployerOfferingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/GetEmployerPayCycles", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetEmployerPayCycles(string requestXml) {
            object[] results = this.Invoke("GetEmployerPayCycles", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployerPayCyclesAsync(string requestXml) {
            this.GetEmployerPayCyclesAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void GetEmployerPayCyclesAsync(string requestXml, object userState) {
            if ((this.GetEmployerPayCyclesOperationCompleted == null)) {
                this.GetEmployerPayCyclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployerPayCyclesOperationCompleted);
            }
            this.InvokeAsync("GetEmployerPayCycles", new object[] {
                        requestXml}, this.GetEmployerPayCyclesOperationCompleted, userState);
        }
        
        private void OnGetEmployerPayCyclesOperationCompleted(object arg) {
            if ((this.GetEmployerPayCyclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployerPayCyclesCompleted(this, new GetEmployerPayCyclesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/GetEmployerCostCentres", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetEmployerCostCentres(string requestXml) {
            object[] results = this.Invoke("GetEmployerCostCentres", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployerCostCentresAsync(string requestXml) {
            this.GetEmployerCostCentresAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void GetEmployerCostCentresAsync(string requestXml, object userState) {
            if ((this.GetEmployerCostCentresOperationCompleted == null)) {
                this.GetEmployerCostCentresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployerCostCentresOperationCompleted);
            }
            this.InvokeAsync("GetEmployerCostCentres", new object[] {
                        requestXml}, this.GetEmployerCostCentresOperationCompleted, userState);
        }
        
        private void OnGetEmployerCostCentresOperationCompleted(object arg) {
            if ((this.GetEmployerCostCentresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployerCostCentresCompleted(this, new GetEmployerCostCentresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/SyncLookupData", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SyncLookupData(string requestXml) {
            object[] results = this.Invoke("SyncLookupData", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SyncLookupDataAsync(string requestXml) {
            this.SyncLookupDataAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void SyncLookupDataAsync(string requestXml, object userState) {
            if ((this.SyncLookupDataOperationCompleted == null)) {
                this.SyncLookupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncLookupDataOperationCompleted);
            }
            this.InvokeAsync("SyncLookupData", new object[] {
                        requestXml}, this.SyncLookupDataOperationCompleted, userState);
        }
        
        private void OnSyncLookupDataOperationCompleted(object arg) {
            if ((this.SyncLookupDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncLookupDataCompleted(this, new SyncLookupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/ValidateEmployer", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateEmployer(string requestXml) {
            object[] results = this.Invoke("ValidateEmployer", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateEmployerAsync(string requestXml) {
            this.ValidateEmployerAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void ValidateEmployerAsync(string requestXml, object userState) {
            if ((this.ValidateEmployerOperationCompleted == null)) {
                this.ValidateEmployerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateEmployerOperationCompleted);
            }
            this.InvokeAsync("ValidateEmployer", new object[] {
                        requestXml}, this.ValidateEmployerOperationCompleted, userState);
        }
        
        private void OnValidateEmployerOperationCompleted(object arg) {
            if ((this.ValidateEmployerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateEmployerCompleted(this, new ValidateEmployerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/EmployerCodeByWorkEmail", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EmployerCodeByWorkEmail(string requestXml) {
            object[] results = this.Invoke("EmployerCodeByWorkEmail", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EmployerCodeByWorkEmailAsync(string requestXml) {
            this.EmployerCodeByWorkEmailAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void EmployerCodeByWorkEmailAsync(string requestXml, object userState) {
            if ((this.EmployerCodeByWorkEmailOperationCompleted == null)) {
                this.EmployerCodeByWorkEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployerCodeByWorkEmailOperationCompleted);
            }
            this.InvokeAsync("EmployerCodeByWorkEmail", new object[] {
                        requestXml}, this.EmployerCodeByWorkEmailOperationCompleted, userState);
        }
        
        private void OnEmployerCodeByWorkEmailOperationCompleted(object arg) {
            if ((this.EmployerCodeByWorkEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployerCodeByWorkEmailCompleted(this, new EmployerCodeByWorkEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/SectorDetails", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SectorDetails(string requestXml) {
            object[] results = this.Invoke("SectorDetails", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SectorDetailsAsync(string requestXml) {
            this.SectorDetailsAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void SectorDetailsAsync(string requestXml, object userState) {
            if ((this.SectorDetailsOperationCompleted == null)) {
                this.SectorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSectorDetailsOperationCompleted);
            }
            this.InvokeAsync("SectorDetails", new object[] {
                        requestXml}, this.SectorDetailsOperationCompleted, userState);
        }
        
        private void OnSectorDetailsOperationCompleted(object arg) {
            if ((this.SectorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SectorDetailsCompleted(this, new SectorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/FormsEmailToSelf", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FormsEmailToSelf(string requestXml) {
            object[] results = this.Invoke("FormsEmailToSelf", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FormsEmailToSelfAsync(string requestXml) {
            this.FormsEmailToSelfAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void FormsEmailToSelfAsync(string requestXml, object userState) {
            if ((this.FormsEmailToSelfOperationCompleted == null)) {
                this.FormsEmailToSelfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormsEmailToSelfOperationCompleted);
            }
            this.InvokeAsync("FormsEmailToSelf", new object[] {
                        requestXml}, this.FormsEmailToSelfOperationCompleted, userState);
        }
        
        private void OnFormsEmailToSelfOperationCompleted(object arg) {
            if ((this.FormsEmailToSelfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormsEmailToSelfCompleted(this, new FormsEmailToSelfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maxxia.com.au/CometInterface/CreatePayee", RequestNamespace="http://maxxia.com.au/CometInterface", ResponseNamespace="http://maxxia.com.au/CometInterface", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CreatePayee(string requestXml) {
            object[] results = this.Invoke("CreatePayee", new object[] {
                        requestXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePayeeAsync(string requestXml) {
            this.CreatePayeeAsync(requestXml, null);
        }
        
        /// <remarks/>
        public void CreatePayeeAsync(string requestXml, object userState) {
            if ((this.CreatePayeeOperationCompleted == null)) {
                this.CreatePayeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePayeeOperationCompleted);
            }
            this.InvokeAsync("CreatePayee", new object[] {
                        requestXml}, this.CreatePayeeOperationCompleted, userState);
        }
        
        private void OnCreatePayeeOperationCompleted(object arg) {
            if ((this.CreatePayeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePayeeCompleted(this, new CreatePayeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SubmitFleetAccountCompletedEventHandler(object sender, SubmitFleetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitFleetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitFleetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SetupFullPackageCompletedEventHandler(object sender, SetupFullPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetupFullPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetupFullPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CreateEmployeeCompletedEventHandler(object sender, CreateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CreatePackageCompletedEventHandler(object sender, CreatePackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CreateVehicleCompletedEventHandler(object sender, CreateVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CreateBenefitCompletedEventHandler(object sender, CreateBenefitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBenefitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBenefitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CreatePaymentInstructionCompletedEventHandler(object sender, CreatePaymentInstructionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePaymentInstructionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePaymentInstructionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void GetEmployerOfferingsCompletedEventHandler(object sender, GetEmployerOfferingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployerOfferingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployerOfferingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void GetEmployerPayCyclesCompletedEventHandler(object sender, GetEmployerPayCyclesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployerPayCyclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployerPayCyclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void GetEmployerCostCentresCompletedEventHandler(object sender, GetEmployerCostCentresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployerCostCentresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployerCostCentresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SyncLookupDataCompletedEventHandler(object sender, SyncLookupDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncLookupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncLookupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ValidateEmployerCompletedEventHandler(object sender, ValidateEmployerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateEmployerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateEmployerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void EmployerCodeByWorkEmailCompletedEventHandler(object sender, EmployerCodeByWorkEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployerCodeByWorkEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployerCodeByWorkEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SectorDetailsCompletedEventHandler(object sender, SectorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SectorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void FormsEmailToSelfCompletedEventHandler(object sender, FormsEmailToSelfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormsEmailToSelfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormsEmailToSelfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CreatePayeeCompletedEventHandler(object sender, CreatePayeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePayeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePayeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591